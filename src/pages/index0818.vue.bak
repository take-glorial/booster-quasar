<template>
  <div class="full-width row wrap justify-center content-center">
    <div class="col-10" style="padding:10px 0px">
      <q-img src="@/assets/img_WF_mainBg01.png" />
    </div>

    <div class="col-5 board" style="padding:10px 10px">
      <q-table
        title="공지사항"
        :data="noticeList"
        :columns="columnInfo"
        row-key="board_seq"
        hide-header
        hide-bottom
        class="no-shadow"
      >
        <template slot="top-right">
          <q-btn
            flat
            round
            dense
            icon="more_horiz"
            @click="viewdetail('M0028')"
          />
        </template>
        <template v-slot:body="props">
          <q-tr
            class="cursor-pointer"
            :props="props"
            @click.native="onRowClick(props.row)"
          >
            <q-td key="board_title" :props="props">
              {{ props.row.board_title }}
            </q-td>
            <q-td key="reg_dt" :props="props">
              {{ formatDate(props.row.reg_dt) }}
            </q-td>
          </q-tr>
        </template>
      </q-table>
    </div>

    <div class="col-5 q-col-gutter-none board" style="padding:10px 10px">
      <q-table
        title="게시판"
        :data="boardList"
        :columns="columnInfo"
        row-key="board_seq"
        hide-header
        hide-bottom
        class="no-shadow"
      >
        <template slot="top-right">
          <q-btn
            flat
            round
            dense
            icon="more_horiz"
            @click="viewdetail('M0028')"
          />
        </template>
        <template v-slot:body="props">
          <q-tr
            class="cursor-pointer"
            :props="props"
            @click.native="onRowClick(props.row)"
          >
            <q-td key="board_title" :props="props">
              {{ props.row.board_title }}
            </q-td>
            <q-td key="reg_dt" :props="props">
              {{ formatDate(props.row.reg_dt) }}
            </q-td>
          </q-tr>
        </template>
      </q-table>
    </div>

    <q-dialog
      v-model="openDialog"
      persistent
      :maximized="maximizedToggle"
      transition-show="slide-up"
      transition-hide="slide-down"
    >
      <q-card
        style="height:634px; width: 700px; max-width: 80vw;"
        class="bg-primary text-white"
      >
        <q-bar>
          <q-space />

          <q-btn
            dense
            flat
            icon="minimize"
            @click="maximizedToggle = false"
            :disable="!maximizedToggle"
          >
            <q-tooltip
              v-if="maximizedToggle"
              content-class="bg-white text-primary"
              >Minimize</q-tooltip
            >
          </q-btn>
          <q-btn
            dense
            flat
            icon="crop_square"
            @click="maximizedToggle = true"
            :disable="maximizedToggle"
          >
            <q-tooltip
              v-if="!maximizedToggle"
              content-class="bg-white text-primary"
              >Maximize</q-tooltip
            >
          </q-btn>
          <q-btn dense flat icon="close" v-close-popup>
            <q-tooltip content-class="bg-white text-primary">Close</q-tooltip>
          </q-btn>
        </q-bar>

        <q-card-section>
          <div class="text-h6">{{ selectedInfo.board_title }}</div>
        </q-card-section>

        <q-card-section
          class="q-pt-none scroll"
          style="height: 50vh; max-height: 50vh"
        >
          <p v-html="selectedInfo.board_txt"></p>
        </q-card-section>

        <q-separator />

        <q-card-actions align="right">
          <q-btn color="white" text-color="black" label="Close" v-close-popup />
        </q-card-actions>
      </q-card>
    </q-dialog>
  </div>
</template>

<script>
import { getBoardList, boardSelect } from "@/service/mod/CM010";
import { date } from "quasar";

export default {
  data() {
    return {
      columnInfo: [
        {
          name: "board_title",
          label: "board_title",
          align: "left",
          field: "board_title"
        },
        { name: "reg_dt", label: "reg_dt", align: "center", field: "reg_dt" }
      ],
      openDialog: false,
      maximizedToggle: false,
      noticeList: [],
      boardList: [],
      selectedInfo: {}
    };
  },
  mounted() {
    this.request({
      project_cd: process.env.projectCd,
      menu_cd: "M0028"
    });
  },
  methods: {
    async request(query) {
      let dataRes = await getBoardList(query);
      console.log("getboardlist", dataRes);
      this.boardList = dataRes.data.data.boardList;
      this.noticeList = dataRes.data.data.noticeList;
    },
    requestDetail(query) {
      return boardSelect(query);
    },
    async onRowClick(boardInfo) {
      let dataRes = await this.requestDetail(boardInfo);
      this.selectedInfo = dataRes.data.data;
      this.openDialog = !this.openDialog;
    },
    formatDate(timeStamp) {
      return date.formatDate(timeStamp, "YYYY-MM-DD");
    },
    viewdetail(sMenuCd) {
      alert(sMenuCd);
    }
  }
};
</script>

<style lang="sass" scoped>
.board
  overflow: auto;
.my-card
  width: 100%
</style>
